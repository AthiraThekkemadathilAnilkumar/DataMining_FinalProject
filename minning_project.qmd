---
title: "Minning Project"
author: "Athira, Neharika, Swati"
format: html
editor: visual
---

### Loading the required packages

```{r}

if(!require(pacman))
  install.packages("pacman")

pacman::p_load(
  tidyverse,
  ggplot2,
  dplyr, 
  patchwork
)

```

### Loading the dataset

```{r}
pokemon = read_csv("C:/Users/sweet/OneDrive/Desktop/Data Mining/Project/archive (19)/pokedex_(Update_05.20).csv")

pokemon |>
  glimpse()
```

```{r}
head(pokemon)

```

### Remove the unwanted columns

```{r}

pokemon <- pokemon |>
  select(-c("german_name", "japanese_name", "egg_type_number", 
            "egg_type_1", "egg_type_2", "percentage_male", "egg_cycles", 
            "ability_hidden", "catch_rate", "base_friendship", 
            "base_experience", "growth_rate"))

```

```{r}

pokemon

```

### Renaming the columns

```{r}

pokemon <- pokemon |>
  rename_with(~ "number_id", 1) |>
  glimpse()

pokemon

```

### Removing the extra character

```{r}

pokemon$species <- gsub("PokÃ©mon", "", pokemon$species)

```

```{r}

pokemon

```

### Pivot Longer

```{r}

#pokemon <- pokemon |>
  #pivot_longer(
    #cols = c("type_1", "type_2"),
    #names_to = "type",
    #values_to = "type_value"
  #) 

#pokemon

```

```{r}

#pokemon <- pokemon |>
  #pivot_longer(
    #cols = c("ability_1", "ability_2"),
    #names_to = "ability",
    #values_to = "ability_value"
  #) 

#pokemon

```

### Moving the columns

```{r}

#pokemon <- pokemon |>
  #relocate("type", "type_value", .after = "type_number")

#pokemon <- pokemon |>
  #relocate("ability", "ability_value", .after = "abilities_number")

```

```{r}

#pokemon

```

### Separating the pokemon according to their status

```{r}

legendary_pokemon <- pokemon |>
  filter(status == "Legendary")

legendary_pokemon

sublegendary_pokemon <- pokemon |>
  filter(status == "Sub Legendary") 

sublegendary_pokemon

normal_pokemon <- pokemon |>
  filter(status == "Normal")

normal_pokemon

mythical_pokemon <- pokemon |>
  filter(status == "Mythical") 

mythical_pokemon

```

### Checking for missing values

```{r}

missing_leg <- colSums(is.na(legendary_pokemon))

missing_leg[missing_leg > 0]
  

```

```{r}

legendary_pokemon <- legendary_pokemon |>
  mutate(ability_1 = ifelse(name == "Eternatus Eternamax", 
                             "Pressure", ability_1)) |>
  mutate(type_2 = if_else(is.na(type_2), "Unknown", type_2)) |>
  mutate(ability_2 = if_else(is.na(ability_2), "Unknown", ability_2))

legendary_pokemon
  
```

```{r}

mean_weight <- legendary_pokemon |>
  group_by(species) |>
  summarize(mean_weight = mean(weight_kg, na.rm = TRUE))

legendary_pokemon <- legendary_pokemon |>
  left_join(mean_weight, by = "species") |>
  mutate(weight_kg = ifelse(is.na(weight_kg), mean_weight, weight_kg)) |>
  select(-mean_weight)

legendary_pokemon

```

```{r}

missing_leg <- colSums(is.na(legendary_pokemon))

missing_leg[missing_leg > 0]

```


```{r}

missing_subleg <- colSums(is.na(sublegendary_pokemon))

missing_subleg[missing_subleg > 0]

```

```{r}

sublegendary_pokemon <- sublegendary_pokemon |>
  mutate(type_2 = if_else(is.na(type_2), "Unknown", type_2)) |>
  mutate(ability_2 = if_else(is.na(ability_2), "Unknown", ability_2))

```

```{r}

missing_subleg <- colSums(is.na(sublegendary_pokemon))

missing_subleg[missing_subleg > 0]

```


```{r}

missing_nor <- colSums(is.na(normal_pokemon))

missing_nor[missing_nor > 0]

```

```{r}

nor_null <- normal_pokemon[is.na(normal_pokemon$ability_1), ]

print(nor_null)

```

```{r}

normal_pokemon <- normal_pokemon |>
  mutate(ability_1 = ifelse(name == "Partner Pikachu", 
                             "Static", ability_1)) |>
  mutate(ability_1 = ifelse(name == "Partner Eevee", 
                             "Run Away", ability_1)) |>
  mutate(type_2 = if_else(is.na(type_2), "Unknown", type_2)) |>
  mutate(ability_2 = if_else(is.na(ability_2), "Unknown", ability_2))

```

```{r}

missing_nor <- colSums(is.na(normal_pokemon))

missing_nor[missing_nor > 0]

```

```{r}

missing_myth <- colSums(is.na(mythical_pokemon))

missing_myth[missing_myth > 0]

```

```{r}

mythical_pokemon <- mythical_pokemon |>
  mutate(type_2 = if_else(is.na(type_2), "Unknown", type_2)) |>
  mutate(ability_2 = if_else(is.na(ability_2), "Unknown", ability_2))

```

```{r}

missing_myth <- colSums(is.na(mythical_pokemon))

missing_myth[missing_myth > 0]

```

### Pivot Longer

```{r}

legendary_pokemon <- legendary_pokemon |>
  select(-type_number) |>
  pivot_longer(
    cols = starts_with("type_"),
    names_to = "type",
    values_to = "type_value",
    values_drop_na = TRUE
  ) |>
  pivot_longer(
    cols = starts_with("ability_"),
    names_to = "ability",
    values_to = "ability_value",
    values_drop_na = TRUE
  )

```

```{r}

legendary_pokemon <- legendary_pokemon |>
  relocate("type", "type_value", .after = "species")

legendary_pokemon <- legendary_pokemon |>
  relocate("ability", "ability_value", .after = "abilities_number")

legendary_pokemon

```

```{r}

dim(legendary_pokemon)

```

```{r}

sublegendary_pokemon <- sublegendary_pokemon |>
  select(-type_number) |>
  pivot_longer(
    cols = starts_with("type_"),
    names_to = "type",
    values_to = "type_value",
    values_drop_na = TRUE
  ) |>
  pivot_longer(
    cols = starts_with("ability_"),
    names_to = "ability",
    values_to = "ability_value",
    values_drop_na = TRUE
  )

```

```{r}


sublegendary_pokemon <- sublegendary_pokemon |>
  relocate("type", "type_value", .after = "species")

sublegendary_pokemon <- sublegendary_pokemon |>
  relocate("ability", "ability_value", .after = "abilities_number")

sublegendary_pokemon

```

```{r}

dim(sublegendary_pokemon)

```

```{r}

normal_pokemon <- normal_pokemon |>
  select(-type_number) |>
  pivot_longer(
    cols = starts_with("type_"),
    names_to = "type",
    values_to = "type_value",
    values_drop_na = TRUE
  ) |>
  pivot_longer(
    cols = starts_with("ability_"),
    names_to = "ability",
    values_to = "ability_value",
    values_drop_na = TRUE
  )

```

```{r}

normal_pokemon <- normal_pokemon |>
  relocate("type", "type_value", .after = "species")

normal_pokemon <- normal_pokemon |>
  relocate("ability", "ability_value", .after = "abilities_number")

normal_pokemon

```

```{r}

dim(normal_pokemon)

```

```{r}

mythical_pokemon <- mythical_pokemon |>
  select(-type_number) |>
  pivot_longer(
    cols = starts_with("type_"),
    names_to = "type",
    values_to = "type_value",
    values_drop_na = TRUE
  ) |>
  pivot_longer(
    cols = starts_with("ability_"),
    names_to = "ability",
    values_to = "ability_value",
    values_drop_na = TRUE
  )

```

```{r}

mythical_pokemon <- mythical_pokemon |>
  relocate("type", "type_value", .after = "species")

mythical_pokemon <- mythical_pokemon |>
  relocate("ability", "ability_value", .after = "abilities_number")

mythical_pokemon

```

```{r}

dim(mythical_pokemon)

```

```{r}

summary(legendary_pokemon)

```

```{r}

ggplot(legendary_pokemon, aes(x = "", y = total_points)) +
  geom_boxplot() +
  labs(title = "Box Plot of Total Point for Legendary Pokemon",
       y = "Total Points",
       x = NULL) + 
  theme_minimal()

```

```{r}

summary(sublegendary_pokemon)

```

```{r}

ggplot(sublegendary_pokemon, aes(x = "", y = total_points)) +
  geom_boxplot() +
  labs(title = "Box Plot of Total Point for Sub-legendary Pokemon",
       y = "Total Points",
       x = NULL) + 
  theme_minimal()

```

```{r}

summary(normal_pokemon)

```

```{r}

ggplot(normal_pokemon, aes(x = "", y = total_points)) +
  geom_boxplot() +
  labs(title = "Box Plot of Total Point for Normal Pokemon",
       y = "Total Points",
       x = NULL) + 
  theme_minimal()

```

```{r}

summary(mythical_pokemon)

```

```{r}

ggplot(mythical_pokemon, aes(x = "", y = total_points)) +
  geom_boxplot() +
  labs(title = "Box Plot of Total Point for Mythical Pokemon",
       y = "Total Points",
       x = NULL) + 
  theme_minimal()

```

```{r}



```

