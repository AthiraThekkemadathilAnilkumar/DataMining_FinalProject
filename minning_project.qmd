---
title: "Minning Project"
author: "Athira, Neharika, Swati"
format: html
editor: visual
---

### Loading the required packages

```{r}

if(!require(pacman))
  install.packages("pacman")

pacman::p_load(
  tidyverse,
  ggplot2,
  dplyr, 
  patchwork
)

```

### Loading the dataset

```{r}
pokemon = read_csv("C:/Users/sweet/OneDrive/Desktop/Data Mining/Project/archive (19)/pokedex_(Update_05.20).csv")

pokemon |>
  glimpse()
```

```{r}
head(pokemon)

```

### Remove the unwanted columns

```{r}

pokemon <- pokemon |>
  select(-c("german_name", "japanese_name", "egg_type_number", 
            "egg_type_1", "egg_type_2", "percentage_male", "egg_cycles", 
            "ability_hidden", "catch_rate", "base_friendship", 
            "base_experience", "growth_rate"))

```

```{r}

pokemon

```

### Renaming the columns

```{r}

pokemon <- pokemon |>
  rename_with(~ "number_id", 1) |>
  glimpse()

pokemon

```

### Removing the extra character

```{r}

pokemon$species <- gsub("Pokémon", "", pokemon$species)

```

```{r}

pokemon

```

### Converting categorical variable into numerical format

```{r}

pokemon <- pokemon |>
  mutate(
    status = case_when(
      status == "Legendary" ~ 1,
      status == "Sub Legendary" ~ 2,
      status == "Normal" ~ 3,
      status == "Mythical" ~ 4
    )
  ) |>
  glimpse()

```

### Checking for missing values

```{r}

missing_pokemon <- colSums(is.na(pokemon))

missing_leg[missing_pokemon > 0]
  

```

```{r}

pokemon <- pokemon |>
  mutate(ability_1 = ifelse(name == "Eternatus Eternamax", 
                             "Pressure", ability_1),
         type_2 = if_else(is.na(type_2), "Unknown", type_2),
         ability_2 = if_else(is.na(ability_2), "Unknown", ability_2),
         ability_1 = ifelse(name == "Partner Pikachu", 
                             "Static", ability_1),
         ability_1 = ifelse(name == "Partner Eevee", 
                             "Run Away", ability_1))

pokemon
  
```

```{r}

mean_weight <- pokemon |>
  group_by(species) |>
  summarize(mean_weight = mean(weight_kg, na.rm = TRUE))

pokemon <- pokemon |>
  left_join(mean_weight, by = "species") |>
  mutate(weight_kg = ifelse(is.na(weight_kg), mean_weight, weight_kg)) |>
  select(-mean_weight)

pokemon

```

```{r}

missing_pokemon <- colSums(is.na(pokemon))

missing_leg[missing_pokemon > 0]

```

```{r}

dim(pokemon)

```

```{r}

summary(pokemon)

```

### Frequency Count - Type

```{r}

type1_count_pok <- table(pokemon$type_1)

print(type1_count_pok)

type1_count_pok <- data.frame(Type = names(type1_count_pok), Frequency = as.numeric(type1_count_pok))

print(type1_count_pok)

```

### Visualizing - Type

```{r warning=FALSE, error=FALSE, message=FALSE}

ggplot(type1_count_pok, aes(x = reorder(Type, -Frequency), 
                          y = Frequency, fill = Type)) +
  geom_bar(stat = "identity") +
  labs(title = "Type Distribution for Pokemon", x = "Pokémon Types", 
       y = "Frequency") +
  theme_minimal() +
  coord_flip() +
  theme(axis.text.x = element_text(hjust = 1)) + 
  guides(fill = FALSE) + 
  scale_y_continuous(breaks = seq(0, 150, 25))

```

### Frequency Count - Ability

```{r}

ability1_count_pok <- table(pokemon$ability_1)

print(ability1_count_pok)

ability1_count_pok <- data.frame(Ability = names(ability1_count_pok), Frequency = as.numeric(ability1_count_pok))

print(ability1_count_pok)

```

```{r}

abilities_pok_10 <- ability1_count_pok[ability1_count_pok$Frequency > 10, ]

print(abilities_pok_10)

```


### Visualizing - Ability

```{r}

ggplot(abilities_pok_10, aes(x = reorder(Ability, -Frequency), 
                          y = Frequency, fill = Ability)) +
  geom_bar(stat = "identity") +
  labs(title = "Ability Distribution for Pokemon", x = "Pokémon Abilities", y = "Frequency") +
  theme_minimal() +
  coord_flip() +
  theme(axis.text.x = element_text(hjust = 1)) + 
  guides(fill = FALSE)
```




